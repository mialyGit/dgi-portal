{"version":3,"sources":["utils/cont.js","components/Personnel/Contribuable/AddComponents/pers-form.js","components/Personnel/Contribuable/AddComponents/cin-form.js","components/Personnel/Contribuable/AddComponents/compte-form.js","components/Personnel/Contribuable/AddComponents/pro-form.js","components/Personnel/Contribuable/add.js","utils/index.js","components/Common/SweetModal.js"],"names":["ContApi","getAll","axios","get","base","getAllDemandes","add","data","post","delete","id","update","put","PersForm","user","handleFileChange","handleInputChange","nextStep","fileRef","useRef","useState","errors","setErrors","file","preview","setPreview","progress","setProgress","color","text","uploadMessage","setUploadMessage","handleChange","e","name","target","handleEvent","setTimeout","value","parseInt","loaded","fileSize","type","result","fileName","Form","onSubmit","preventDefault","formErrors","nom","adresse","newErrors","trim","validateForm","Object","keys","length","Card","Header","Title","as","Body","className","role","Row","Col","md","onClick","current","click","Img","onError","src","basename","style","height","variant","alt","FormControl","accept","ref","onChange","event","image","files","fileExtension","split","pop","toLowerCase","indexOf","reader","FileReader","size","addEventListener","addListeners","readAsDataURL","hidden","ProgressBar","animated","now","Group","Label","column","sm","InputGroup","Prepend","Text","placeholder","Feedback","prenom","telephone","Footer","display","justifyContent","href","Button","CinForm","cin","prevStep","hasDuplicata","setDuplicata","next","numero","date_delivrance","date_naissance","lieu_naissance","pere","mere","Check","label","date_duplicata","lieu_duplicata","CompteForm","save","loading","showPassword","setShowPassword","email","password","password_confirmation","test","isValidEmail","Append","disabled","Spinner","animation","aria-hidden","ProForm","hasError","filterOption","createFilter","ignoreAccents","nif","raison_sociale","activite","console","log","JSON","stringify","Control","rows","loadOptions","input","cb","map","row","defaultOptions","styles","container","flex","control","borderColor","s_matrim","checked","type_contr","title","htmlFor","AddUser","history","useHistory","initialUserState","faker","firstName","lastName","internet","phone","number","photo","address","country","avatar","company","bsNoun","type_user_id","datatype","jobTitle","localisation","x","y","step","setStep","setLoading","date","past","toJSON","slice","birthdate","min","max","mode","recent","fullName","sex","setCin","setUser","handleInputFileChange","handleCinChange","then","res","localStorage","removeItem","newValue","push","pathname","state","catch","err","errorModal","parse","getItem","token","Axios","create","baseURL","API_SERVER","headers","Authorization","Toast","Swal","mixin","toast","showConfirmButton","customClass","popup","showClass","hideClass","deleteModal","backdrop","icon","buttonsStyling","confirmButton","cancelButton","confirmButtonText","cancelButtonText","showCancelButton","allowOutsideClick","allowEscapeKey","showLoaderOnConfirm","response","fire","message","html"],"mappings":"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","file":"static/js/28.01a80249.chunk.js","sourcesContent":["import axios from \"./index\";\r\n\r\nclass ContApi {\r\n  static getAll = () => {\r\n    return axios.get(`${base}`);\r\n  };\r\n\r\n  static getAllDemandes = () => {\r\n    return axios.get(`api/users/demandes`);\r\n  };\r\n\r\n  static add = (data) => {\r\n    return axios.post(`${base}`, data);\r\n  };\r\n\r\n  static delete = (id) => {\r\n    return axios.delete(`${base}/${id}`);\r\n  };\r\n\r\n  static update = (data,id) => {\r\n    return axios.put(`${base}/${id}`, data);\r\n    // return axios.put(`${base}/${id}`, data);\r\n  };\r\n}\r\n\r\n// let base = \"api/users\";\r\nlet base = \"api/contribuables\";\r\n\r\nexport default ContApi;\r\n","import { basename } from 'config/constant';\r\nimport React, { useRef, useState } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button, ProgressBar } from 'react-bootstrap';\r\n\r\nconst PersForm = ({user, handleFileChange,  handleInputChange, nextStep}) => {\r\n    const fileRef = useRef();\r\n    const [errors, setErrors] = useState({});\r\n    const [preview, setPreview] = useState(user.file);\r\n    const [progress, setProgress] = useState(0)\r\n    const [uploadMessage, setUploadMessage] = useState({\r\n        color : \"text-muted\",\r\n        text : user.file ? user.file : \"Veuillez importer une icône ici\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name } = e.target\r\n        handleInputChange(e)\r\n        if(!!errors[name]){\r\n            setErrors({...errors, [name]:null})\r\n        }\r\n    }\r\n\r\n    const defaultSrcImg = (e) => {\r\n        e.target.src = basename + \"/no-import.png\"\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {nom, adresse} = user;\r\n        const newErrors = {}\r\n        if(!nom || nom.trim() === '') newErrors.nom = \"Veuillez entrer le nom de l'utilisateur\"\r\n        if(!adresse || adresse.trim() === '') newErrors.adresse = \"Veuillez entrer l'adresse de l'utilisateur\"\r\n        return newErrors\r\n    }\r\n\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        if(Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        } else {\r\n            nextStep();\r\n        }\r\n    }\r\n\r\n    function handleEvent(e) {\r\n        setTimeout(() => {\r\n            const value = parseInt( ((e.loaded / e.target.fileSize) * 100), 10 );\r\n            setProgress(value)\r\n            if (e.type === \"loadend\") {\r\n                handleFileChange(e.target.result);\r\n                setUploadMessage({color: \"text-muted\", text: e.target.fileName})\r\n                setPreview(e.target.result);\r\n                setTimeout(() => {\r\n                    setProgress(0)\r\n                }, 100); \r\n            }\r\n        }, 500);\r\n    }\r\n    \r\n    function addListeners(reader) {\r\n        reader.addEventListener('loadstart', handleEvent);\r\n        reader.addEventListener('load', handleEvent);\r\n        reader.addEventListener('loadend', handleEvent);\r\n        reader.addEventListener('progress', handleEvent);\r\n        reader.addEventListener('error', handleEvent);\r\n        reader.addEventListener('abort', handleEvent);\r\n    }\r\n\r\n    const handleInputFileChange = event => {\r\n        const image = event.target.files[0]\r\n        var ext = [\"jpg\",\"jpeg\",\"png\"]\r\n        if(image){\r\n            var fileExtension = image.name.split('.').pop().toLowerCase()\r\n            if(ext.indexOf(fileExtension)>-1){\r\n                const reader = new FileReader();\r\n                reader.fileName = image.name;\r\n                reader.fileSize = image.size;\r\n                addListeners(reader);\r\n                /*reader.onload = ({ target: { result } }) => {\r\n                    setUploadMessage({color: \"text-muted\", text: image.name})\r\n                    setPreview(result)\r\n                    handleFileChange(result)\r\n                };*/\r\n                reader.readAsDataURL(image);\r\n                \r\n            } else{\r\n                setUploadMessage({color: \"text-danger\", text: \"Fichier invalide!\"})\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={next}>\r\n            <Card>\r\n                {/* --------------------------------------------- INFO PERS -----------------------------------------------------------------------*/}\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">Ajouter un utilisateur</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"bs-stepper\">\r\n                        <div className=\"bs-stepper-header\" role=\"tablist\">\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-1\">\r\n                                    <span className=\"bs-stepper-circle\">1</span>\r\n                                    <span className=\"bs-stepper-label\">Information personnelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-2\">\r\n                                    <span className=\"bs-stepper-circle\">2</span>\r\n                                    <span className=\"bs-stepper-label\">Information sur le CIN</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-3\">\r\n                                    <span className=\"bs-stepper-circle\">3</span>\r\n                                    <span className=\"bs-stepper-label\">Information professionelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\"  id=\"step-4\">\r\n                                    <span className=\"bs-stepper-circle\">4</span>\r\n                                    <span className=\"bs-stepper-label\">Information du compte</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <Row  className=\"pt-4\">\r\n                        <Col md={2}>\r\n                            <Card onClick={() => fileRef.current.click()}>\r\n                                <Card.Img onError={defaultSrcImg} style={{ height : '100%' }} variant=\"top\" src={ preview } alt=\"activity-user\" />\r\n                                <small className={`mt-3 text-center ${uploadMessage.color}`} >{uploadMessage.text}</small>\r\n                                <FormControl type=\"file\" id=\"photo\" name=\"photo\" accept=\"image/*\" ref={fileRef} onChange={handleInputFileChange} hidden/>\r\n                            </Card>\r\n                            <ProgressBar className={(progress === 0 ) && \"d-none\"} animated now={progress} />\r\n                        </Col>\r\n                        <Col></Col>\r\n                        <Col md={8} >\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={2}>Nom</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\" id=\"nom\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-user\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.nom && \"is-invalid\"} id=\"nom\" name=\"nom\" placeholder=\"Veuillez entrer votre nom\" value={user.nom} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.nom}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={2}>Prénom</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-user\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl id=\"prenom\" name=\"prenom\" placeholder=\"Veuillez entrer votre prénom\" value={user.prenom} onChange={handleChange} />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={2}>Téléphone</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-phone\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl id=\"telephone\" name=\"telephone\" placeholder=\"Veuillez entrer votre numéro de téléphone\"value={user.telephone} onChange={handleChange} />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={2}>Adresse</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-map-pin\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.adresse && \"is-invalid\"} id=\"adresse\" name=\"adresse\" placeholder=\"Veuillez entrer votre adresse\" value={user.adresse} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.adresse}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{display:'flex', justifyContent:'right'}}>\r\n                        <a href=\"/contribuables\" className=\"btn btn-secondary btn-sm\"><i className=\"feather icon-x-circle\"></i>Annuler</a>{' '}\r\n                        <Button className=\"no-margin-btn\" type=\"submit\" variant=\"primary\" size=\"sm\">Confirmer <i className=\"feather icon-chevrons-right\"></i></Button>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PersForm;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst CinForm = ({cin, handleInputChange, nextStep, prevStep}) => {\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [hasDuplicata, setDuplicata] = useState(false);\r\n\r\n    const handleSetDuplicata = () => setDuplicata(!hasDuplicata);\r\n\r\n    const handleChange = (e) => {\r\n        const { name } = e.target\r\n        handleInputChange(e)\r\n        if(!!errors[name]){\r\n            setErrors({...errors, [name]:null})\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {numero, date_delivrance, date_naissance, lieu_naissance } = cin;\r\n        const newErrors = {}\r\n        if(!numero || numero.trim() === '') newErrors.numero = \"Veuillez entrer le numéro cin\"\r\n        if(numero.length !== 12 ) newErrors.numero = \"Le numéro CIN doit comporter 12 caractères\"\r\n        if(!date_delivrance || date_delivrance.trim() === '') newErrors.date_delivrance = \"Veuillez entrer la date de delivrance du cin\"\r\n        if(!date_naissance || date_naissance.trim() === '') newErrors.date_naissance = \"Veuillez entrer la date de naissance\"\r\n        if(!lieu_naissance || lieu_naissance.trim() === '') newErrors.lieu_naissance = \"Veuillez entrer le lieu de naissance\"\r\n        return newErrors\r\n    }\r\n\r\n    const back = (e) => {\r\n        e.preventDefault();\r\n        prevStep();\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        if(Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        } else {\r\n            nextStep();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={next}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">Ajouter un utilisateur</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"bs-stepper\">\r\n                        <div className=\"bs-stepper-header\" role=\"tablist\">\r\n                        <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-1\">\r\n                                    <span className=\"bs-stepper-circle\">1</span>\r\n                                    <span className=\"bs-stepper-label\">Information personnelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-2\">\r\n                                    <span className=\"bs-stepper-circle\">2</span>\r\n                                    <span className=\"bs-stepper-label\">Information sur le CIN</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-3\">\r\n                                    <span className=\"bs-stepper-circle\">3</span>\r\n                                    <span className=\"bs-stepper-label\">Information professionelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\"  id=\"step-4\">\r\n                                    <span className=\"bs-stepper-circle\">4</span>\r\n                                    <span className=\"bs-stepper-label\">Information du compte</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <Row className=\"pt-4\">\r\n                        <Col md={6}>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Numéro CIN</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-hash\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.numero && \"is-invalid\"} id=\"numero\" name=\"numero\" placeholder=\"Numéro CIN\" value={cin.numero} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.numero}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Date de délivrance</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\" >\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-calendar\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type=\"date\" className={errors.date_delivrance && \"is-invalid\"} id=\"date_delivrance\" name=\"date_delivrance\" value={cin.date_delivrance} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.date_delivrance}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} >\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Date de naissance</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-calendar\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type=\"date\" className={errors.date_naissance && \"is-invalid\"} id=\"date_naissance\" name=\"date_naissance\" value={cin.date_naissance} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.date_naissance}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Lieu de naissance</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-map-pin\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.lieu_naissance && \"is-invalid\"} id=\"lieu_naissance\" name=\"lieu_naissance\" placeholder=\"Lieu de naissance\" value={cin.lieu_naissance} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.lieu_naissance}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label column sm={2}>Père</Form.Label>\r\n                        <Col>\r\n                            <InputGroup size=\"sm\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text><i className=\"feather icon-user\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl id=\"pere\" name=\"pere\" placeholder=\"Nom du père\" value={cin.pere} onChange={handleChange} />\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label column sm={2}>Mère</Form.Label>\r\n                        <Col>\r\n                            <InputGroup size=\"sm\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text><i className=\"feather icon-user\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl id=\"mere\" name=\"mere\" placeholder=\"Nom de la mère\" value={cin.mere} onChange={handleChange} />\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <hr />\r\n                    <Form.Group className=\"mt-2\">\r\n                        <Form.Check style={{\"cursor\":\"pointer\"}} type=\"checkbox\" label=\"CIN Duplicata\" onClick={handleSetDuplicata}/>\r\n                    </Form.Group>\r\n                { hasDuplicata && (\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Date de duplicata</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-calendar\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type=\"date\" className={errors.date_duplicata && \"is-invalid\"} id=\"date_duplicata\" name=\"date_duplicata\" value={cin.date_duplicata} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.date_duplicata}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Lieu de duplicata</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-map-pin\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.lieu_duplicata && \"is-invalid\"} id=\"lieu_duplicata\" name=\"lieu_duplicata\" placeholder=\"Lieu de duplicata\" value={cin.lieu_duplicata} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.lieu_duplicata}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{display:'flex', justifyContent:'right'}}>\r\n                        <Button variant=\"secondary\" size=\"sm\" onClick={back}><i className=\"feather icon-chevrons-left\"></i>Retour</Button>{' '}\r\n                        <Button className=\"no-margin-btn\" type=\"submit\" variant=\"primary\" size=\"sm\" onClick={next}>Confirmer <i className=\"feather icon-chevrons-right\"></i></Button>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CinForm;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button, Spinner } from 'react-bootstrap';\r\n\r\nconst CompteForm = ({user, handleInputChange, prevStep, save , loading}) => {\r\n    \r\n    const [errors, setErrors] = useState({});\r\n    const [showPassword,setShowPassword] = useState(0);\r\n\r\n    const isValidEmail = (email) => {\r\n        return /\\S+@\\S+\\.\\S+/.test(email);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name } = e.target\r\n        handleInputChange(e)\r\n        if(!!errors[name]){\r\n            setErrors({...errors, [name]:null})\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {email, password, password_confirmation} = user;\r\n        const newErrors = {}\r\n        if(!email || email.trim() === '' ) newErrors.email = \"Veuillez entrer l'email\"\r\n        if(!isValidEmail(email)) newErrors.email = \"Veuillez entrer un email valide\"\r\n        if(!password || password.trim() === '') newErrors.password = \"Veuillez entrer le mot de passe\"\r\n        if(!password_confirmation || password_confirmation.trim() === '') newErrors.password_confirmation = \"Veuillez confirmer le mot de passe\"\r\n        if(password.trim() !== password_confirmation.trim()) newErrors.password_confirmation = \"Confirmation de mot de passe incorrect\"\r\n        return newErrors\r\n    }\r\n\r\n    const back = (e) => {\r\n        e.preventDefault();\r\n        prevStep();\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        if(Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        } else {\r\n            save(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={next}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">Ajouter un utilisateur</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"bs-stepper\">\r\n                        <div className=\"bs-stepper-header\" role=\"tablist\">\r\n                        <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-1\">\r\n                                    <span className=\"bs-stepper-circle\">1</span>\r\n                                    <span className=\"bs-stepper-label\">Information personnelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-2\">\r\n                                    <span className=\"bs-stepper-circle\">2</span>\r\n                                    <span className=\"bs-stepper-label\">Information sur le CIN</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-3\">\r\n                                    <span className=\"bs-stepper-circle\">3</span>\r\n                                    <span className=\"bs-stepper-label\">Information professionelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\"  id=\"step-4\">\r\n                                    <span className=\"bs-stepper-circle\">4</span>\r\n                                    <span className=\"bs-stepper-label\">Information du compte</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <Row className=\"pt-4\">\r\n                        <Col>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={3}>Email</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-at-sign\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.email && \"is-invalid\"} id=\"email\" name=\"email\" placeholder=\"Email de confirmation\" value={user.email} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.email}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={3}>Mot de passe</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-lock\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type={showPassword !== 1 ? \"password\" : \"text\"} className={errors.password && \"is-invalid\"} id=\"password\" name=\"password\" placeholder=\"Mot de passe\" value={user.password} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.password}</FormControl.Feedback>\r\n                                        {!errors.password && (<InputGroup.Append>\r\n                                            <InputGroup.Text style={{\"cursor\": \"pointer\"}} onClick={()=> showPassword === 1 ? setShowPassword(0) : setShowPassword(1)}>\r\n                                                <i className={showPassword === 1 ? \"feather icon-eye-off\" : \"feather icon-eye\"}></i>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Append>)}\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={3} style={{display:'flex', justifyContent:'right'}}>Confirmation</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\" >\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-lock\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type={showPassword !== 2 ? \"password\" : \"text\"} className={errors.password_confirmation && \"is-invalid\"} id=\"password_confirmation\" name=\"password_confirmation\" placeholder=\"Confirmer votre mot de passe\" value={user.password_confirmation} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.password_confirmation}</FormControl.Feedback>\r\n                                        {!errors.password_confirmation && (<InputGroup.Append>\r\n                                            <InputGroup.Text style={{\"cursor\": \"pointer\"}} onClick={()=> showPassword === 2 ? setShowPassword(0) : setShowPassword(2)}>\r\n                                                <i className={showPassword === 2 ? \"feather icon-eye-off\" : \"feather icon-eye\"}></i>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Append>)}\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{display:'flex', justifyContent:'right'}}>\r\n                        <Button variant=\"secondary\" size=\"sm\" onClick={back}>\r\n                        <i className=\"feather icon-chevrons-left\"></i>Retour\r\n                        </Button>{' '}\r\n                        {(loading && (\r\n                            <Button variant=\"primary\" size=\"sm\" disabled>\r\n                                <Spinner as=\"span\" className=\"mr-2\" size=\"sm\" animation=\"border\" role=\"status\" aria-hidden=\"true\" />\r\n                                Veuillez patientez ...\r\n                            </Button>\r\n                        )) || (\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={next}>\r\n                                <i className=\"feather icon-check-square\"></i>Sauvegarder\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CompteForm;\r\n","import React, { useState } from 'react';\r\nimport { createFilter } from 'react-select';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst ProForm = ({user, handleInputChange, nextStep, prevStep}) => {\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const loadGrade = (input,cb) => {\r\n        let json = [\r\n            {id : 0, nom: 'CELIBATAIRE'},\r\n            {id : 1, nom: 'MARIE(E)'},\r\n            {id : 2, nom: 'DIVORCE(E)'},\r\n            {id : 3, nom: 'VEUF(VE)'},\r\n        ]\r\n        cb(json.map( row => ({\r\n            label: row.nom, \r\n            value: row.id, \r\n            target : { name: 's_matrim', value : row.id }\r\n        })))\r\n    }\r\n\r\n    const filterOption = createFilter({ ignoreAccents: true })\r\n\r\n    const customStyles  = (hasError) => ({\r\n        container: base => ({\r\n            ...base,\r\n            flex: 1\r\n        }),\r\n        control: (styles) => ({\r\n            ...styles,\r\n            ...(errors[hasError] && { borderColor: 'red' }),\r\n          }),\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const { name } = e.target\r\n        handleInputChange(e)\r\n        if(!!errors[name]){\r\n            setErrors({...errors, [name]:null})\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {nif, raison_sociale, activite } = user;\r\n        const newErrors = {}\r\n        if(!nif || nif.trim() === '') newErrors.nif = \"Veuillez entrer le NIF\"\r\n        if(!raison_sociale || raison_sociale.trim() === '') newErrors.raison_sociale = \"Veuillez entrer le raison sociale\"\r\n        if(!activite || activite.trim() === '') newErrors.activite = \"Veuillez entrer l'activité\"\r\n        return newErrors\r\n    }\r\n\r\n    const back = (e) => {\r\n        e.preventDefault();\r\n        prevStep();\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        console.log(formErrors);\r\n        if(Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        } else {\r\n            nextStep();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={next}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">Ajouter un utilisateur</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"bs-stepper\">\r\n                        <div className=\"bs-stepper-header\" role=\"tablist\">\r\n                        <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-1\">\r\n                                    <span className=\"bs-stepper-circle\">1</span>\r\n                                    <span className=\"bs-stepper-label\">Information personnelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-2\">\r\n                                    <span className=\"bs-stepper-circle\">2</span>\r\n                                    <span className=\"bs-stepper-label\">Information sur le CIN</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-3\">\r\n                                    <span className=\"bs-stepper-circle\">3</span>\r\n                                    <span className=\"bs-stepper-label\">Information professionelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\"  id=\"step-4\">\r\n                                    <span className=\"bs-stepper-circle\">4</span>\r\n                                    <span className=\"bs-stepper-label\">Information du compte</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    { JSON.stringify(user) }\r\n                    <Row className=\"pt-4\">\r\n                        <Col md={6}>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={4}>Numéro d'Identification Fiscale</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-hash\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.nif && \"is-invalid\"} id=\"nif\" name=\"nif\" placeholder=\"Numéro Matricule\" value={user.nif} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.nif}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={4}>Raison Sociale</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-hash\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.raison_sociale && \"is-invalid\"} id=\"raison_sociale\" name=\"raison_sociale\" placeholder=\"Raison Sociale\" value={user.raison_sociale} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.raison_sociale}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={4}>Activité</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <Form.Control className={errors.activite && \"is-invalid\"} as=\"textarea\" rows=\"5\" id=\"activite\" name=\"activite\" value={user.activite} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.activite}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} >\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={3}>Situation matrimoniale</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <AsyncSelect filterOption={filterOption} loadOptions={loadGrade} defaultOptions placeholder=\"Selectionner\" name=\"s_matrim\" styles={ customStyles('s_matrim') } onChange={handleChange} />\r\n                                    </InputGroup>\r\n                                    <small className=\"text-danger text-right\">{errors.s_matrim}</small>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={3}>Type de contribuable</Form.Label>\r\n                                <Col>\r\n                                    <div className=\"form-check\">\r\n                                        <input name=\"type_contr\" type=\"radio\" id=\"type_contr_0\" className=\"form-check-input\" value={0} style={{\"cursor\":\"pointer\"}} checked={user.type_contr === \"0\"}  onChange={handleChange}/>\r\n                                        <label title=\"\" htmlFor=\"type_contr_0\" className=\"form-check-label\" style={{\"cursor\":\"pointer\"}}>Personne physique</label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"form-check\">\r\n                                        <input name=\"type_contr\" type=\"radio\" id=\"type_contr_1\" className=\"form-check-input\" value={1} style={{\"cursor\":\"pointer\"}} checked={user.type_contr === \"1\"}  onChange={handleChange}/>\r\n                                        <label title=\"\" htmlFor=\"type_contr_0\" className=\"form-check-label\" style={{\"cursor\":\"pointer\"}}>Personne morale</label>\r\n                                    </div>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{display:'flex', justifyContent:'right'}}>\r\n                        <Button variant=\"secondary\" size=\"sm\" onClick={back}><i className=\"feather icon-chevrons-left\"></i>Retour</Button>{' '}\r\n                        <Button className=\"no-margin-btn\" type=\"submit\" variant=\"primary\" size=\"sm\" onClick={next}>Confirmer <i className=\"feather icon-chevrons-right\"></i></Button>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default ProForm;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { faker } from '@faker-js/faker/locale/fr';\r\nimport PersForm from './AddComponents/pers-form';\r\nimport CinForm from './AddComponents/cin-form';\r\nimport CompteForm from './AddComponents/compte-form';\r\nimport ProForm from './AddComponents/pro-form';\r\nimport { errorModal } from \"../../Common/SweetModal\"\r\n\r\nimport Aux from \"hoc/_Aux\";\r\nimport ContApi from 'utils/cont';\r\n\r\nconst AddUser = () => {\r\n    const history = useHistory();\r\n    // const today = new Date().toJSON().slice(0,10)\r\n    const initialUserState = {\r\n        id : \"\",\r\n        nom : faker.name.firstName(),\r\n        prenom : faker.name.lastName(),\r\n        email : faker.internet.email(),\r\n        telephone : faker.phone.number('+261 34 ## ### ##'),\r\n        photo : \"\",\r\n        adresse : faker.address.country(),\r\n        password : '',\r\n        password_confirmation : '',\r\n        file: faker.image.avatar(),\r\n        nif : faker.phone.number('######'),\r\n        raison_sociale : faker.company.bsNoun(),\r\n        type_user_id : 0,\r\n        s_matrim : faker.datatype.number({'min': 0,'max': 3}),\r\n        activite : faker.name.jobTitle(),\r\n        type_contr : \"0\",\r\n        localisation : JSON.stringify({ x : 1, y : 1})\r\n    }\r\n    const [step, setStep] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const nextStep = () => {\r\n        setStep(step+1)\r\n    }\r\n\r\n    const prevStep = () => {\r\n        setStep(step-1)\r\n    }\r\n    \r\n    const [cin, setCin] = useState({\r\n        numero : faker.phone.number('201#########'),\r\n        date_delivrance : faker.date.past(18).toJSON().slice(0,10),\r\n        date_naissance : faker.date.birthdate({ min: 18, max: 65, mode: 'age' }).toJSON().slice(0,10),\r\n        lieu_naissance : faker.address.country(),\r\n        date_duplicata : faker.date.recent().toJSON().slice(0,10),\r\n        lieu_duplicata : faker.address.country(),\r\n        pere : faker.name.fullName({sex: 'male'}),\r\n        mere : faker.name.fullName({sex: 'female'})\r\n    });\r\n\r\n    const [user, setUser] = useState(initialUserState);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({ ...user, [name]: value });\r\n    };\r\n\r\n    const handleInputFileChange = (image) => {\r\n        setUser({ ...user, file: image })\r\n    }\r\n\r\n    const handleCinChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCin({ ...cin, [name]: value });\r\n    };\r\n\r\n    const save = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        // let str_cin = new Blob([JSON.stringify({})], { type: 'application/json'})\r\n        let data = {...user}\r\n        data.cin = JSON.stringify(cin)\r\n        ContApi.add(data).then((res)=>{\r\n            console.log(res);\r\n            localStorage.removeItem(\"contribuables\")\r\n            let newValue = res.data.user\r\n            return history.push({pathname: '/contribuables', state : {newValue}});\r\n        }).catch((err)=>{\r\n            errorModal(err)\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n    // const addComponents = () => {\r\n    //     switch (step) {\r\n    //         case 1: return <PersForm user={user} handleInputChange={handleInputChange} nextStep={nextStep} prevStep={prevStep}/>\r\n    //         case 2: return <CinForm cin={cin} handleInputChange={handleCinChange} nextStep={nextStep} prevStep={prevStep}/>\r\n    //         case 3: return <CompteForm user={user} handleInputChange={handleInputChange} nextStep={nextStep} prevStep={prevStep}/>\r\n    //         default: return <PersForm user={user} handleInputChange={handleInputChange} nextStep={nextStep} prevStep={prevStep}/>\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 1: return <PersForm user={user} handleFileChange={handleInputFileChange} handleInputChange={handleInputChange} nextStep={nextStep} />\r\n                        case 2: return <CinForm cin={cin} handleInputChange={handleCinChange} nextStep={nextStep} prevStep={prevStep} />\r\n                        case 3: return <ProForm user={user} handleInputChange={handleInputChange} nextStep={nextStep} prevStep={prevStep} />\r\n                        case 4: return <CompteForm user={user} handleInputChange={handleInputChange} save={save} prevStep={prevStep} loading={loading} />\r\n                        default: return <PersForm user={user} handleFileChange={handleInputFileChange} handleInputChange={handleInputChange} nextStep={nextStep} />\r\n                    }\r\n                })()}\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default AddUser;\r\n","import Axios from \"axios\";\r\nimport { API_SERVER } from \"../config/constant\";\r\n// import swal from \"sweetalert2\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\nconst token = user !== null ? user.token : \"\";\r\nconst axios = Axios.create({\r\n  baseURL: `${API_SERVER}`,\r\n  headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n});\r\n\r\n/*axios.interceptors.request.use(\r\n  (config) => {\r\n    // trigger 'loading=true' event here\r\n    // if (config.url !== `/sanctum/csrf-cookie`) {\r\n    swal.fire({\r\n      title: \"Veuillez patientez\",\r\n      imageUrl: `${API_SERVER}loading2.gif`,\r\n      imageWidth: 50,\r\n      imageHeight: 50,\r\n      imageAlt: \"Attendre\",\r\n      allowOutsideClick: false,\r\n      showConfirmButton: false,\r\n    });\r\n    // }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return Promise.reject(error);\r\n  }\r\n);*/\r\n\r\nexport default axios;\r\n","import Swal from 'sweetalert2';\r\nimport 'animate.css';\r\n\r\nconst Toast = () => {\r\n    return Swal.mixin({\r\n        toast: true,\r\n        showConfirmButton: false,\r\n        customClass : { container: 'ml-popup', popup : 'hover-popup'},\r\n        showClass: {\r\n            popup: 'animate__animated animate__fadeInDown'\r\n        },\r\n        hideClass: {\r\n            popup: 'animate__animated animate__fadeOutDown'\r\n        }\r\n    })\r\n}\r\n\r\nconst deleteModal = () => {\r\n    return Swal.mixin({\r\n        // toast: true,\r\n        backdrop : true,\r\n        title : 'Attention',\r\n        text: 'Voulez vous vraiment supprimer ?',\r\n        icon: 'warning',\r\n        buttonsStyling: false,\r\n        customClass : { \r\n            popup : 'swal-sm', \r\n            confirmButton : 'btn btn-danger btn-sm',\r\n            cancelButton : 'btn btn-secondary btn-sm'\r\n        },\r\n        confirmButtonText : 'Confirmer', \r\n        cancelButtonText : 'Annuler', \r\n        showCancelButton: true,\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        showLoaderOnConfirm: true,\r\n    })\r\n}\r\n\r\nconst errorModal = (err) => {\r\n    if (err.response.data) {\r\n        Toast().fire({title: err.response.data.message, icon:'error'})\r\n    } else Toast().fire({\r\n        title: \"Erreur survenue au serveur\",\r\n        html : `Veuillez contacter l'administrateur`,\r\n        icon:'error'\r\n    })\r\n}\r\n\r\n/*const errorModal = (err) => {\r\n    const modal = Swal.mixin({\r\n        icon: 'error',\r\n        buttonsStyling: false,\r\n        customClass : { popup : 'swal-sm', confirmButton : 'btn btn-danger' }\r\n    });\r\n    if (err.response.data) {\r\n        modal.fire({html: err.response.data.message})\r\n    } else modal.fire({html: \"Erreur survenue au serveur <br/> Veuillez contacter l'administrateur.\"})\r\n}*/\r\n\r\nexport { deleteModal, errorModal ,Toast } \r\n"],"sourceRoot":""}