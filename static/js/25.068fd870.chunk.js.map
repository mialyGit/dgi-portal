{"version":3,"sources":["components/Authentication/ResetPassword/index.js","config/constant.js","utils/index.js","utils/auth.js"],"names":["ResetPassword","history","useHistory","setUserSession","useAuth","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","undefined","error","setError","loading","setLoading","className","onSubmit","event","preventDefault","test","AuthApi","Login","then","res","console","log","user","data","token","JSON","stringify","localStorage","setItem","push","catch","err","response","message","type","name","placeholder","onChange","target","value","id","htmlFor","onClick","disabled","role","aria-hidden","to","API_SERVER","basename","parse","getItem","axios","Axios","create","baseURL","headers","Authorization","post","base","Activate","isContribuable","Register","Logout"],"mappings":"kNA6IeA,UApIO,WAElB,IAAMC,EAAUC,cACRC,EAAmBC,cAAnBD,eACR,EAA0BE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA0BN,wBAASO,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BT,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAgDA,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,MACA,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,0BAAMA,UAAU,MAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,OAEpB,0BAAMC,SAnDR,SAACC,GAQX,OANAL,OAASF,GAELO,GACFA,EAAMC,iBAGM,KAAVd,EACOQ,EAAS,2BAZb,eAAeO,KAAKf,GAmBV,KAAbE,EACOM,EAAS,oCAGpBE,GAAW,QACXM,IAAQC,MAAM,CACVjB,QACAE,aACDgB,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,IAAIG,EAAI,eAAQH,EAAII,KAAKD,MAKzB,OAJAA,EAAKE,MAAQL,EAAII,KAAKC,MACtBF,EAAOG,KAAKC,UAAUJ,GACtBzB,EAAeyB,GACfK,aAAaC,QAAQ,OAAQN,GACtB3B,EAAQkC,KAAK,YACrBC,OAAM,SAACC,GACFA,EAAIC,SAAST,KACbf,EAASuB,EAAIC,SAAST,KAAKU,SACxBzB,EAAS,sEAChBE,GAAW,OAvBJF,EAAS,qDAuCJ,yBAAKG,UAAU,QACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,mCAEjB,wBAAIA,UAAU,QAAd,oBACA,yBAAKA,UAAU,oBAMX,2BACIuB,KAAK,QACLvB,UAAU,eACVwB,KAAK,QACLC,YAAY,QACZC,SAAU,SAACxB,GACPZ,EAASY,EAAMyB,OAAOC,OACtB/B,OAASF,OAIrB,yBAAKK,UAAU,oBACX,2BACIuB,KAAQ9B,EAAe,OAAS,WAChCO,UAAU,eACVwB,KAAK,WACLC,YAAY,WACZC,SAAU,SAACxB,GACPV,EAAYU,EAAMyB,OAAOC,OACzB/B,OAASF,OAIpBC,GACG,uBAAGI,UAAU,8BAA8BJ,GAE/C,yBAAKI,UAAU,gCACX,yBAAKA,UAAU,mCACX,2BAAOuB,KAAK,WAAWC,KAAK,kBAAkBK,GAAG,qBAC7C,2BAAOC,QAAQ,mBAAmB9B,UAAU,KAAK+B,QAnG3D,kBAAMrC,GAAiBD,KAmGb,4BAGXK,EACG,4BAAQE,UAAU,uBAAuBgC,UAAQ,GAC7C,0BAAMhC,UAAU,mCAAmCiC,KAAK,SAASC,cAAY,SAC5E,IAFL,kBAKA,4BAAQX,KAAK,SAASvB,UAAU,iCAAhC,gBAGJ,uBAAGA,UAAU,mBAAb,4BAAqD,kBAAC,IAAD,CAASmC,GAAG,mBAAZ,qBACrD,uBAAGnC,UAAU,mBAAb,qCAA2D,kBAAC,IAAD,CAASmC,GAAG,YAAZ,uB,gCCnI3F,oEACO,IAAMC,EAAa,wCACbC,EAAW,e,gCCFxB,6BAIM1B,EAAOG,KAAKwB,MAAMtB,aAAauB,QAAQ,SACvC1B,EAAiB,OAATF,EAAgBA,EAAKE,MAAQ,GACrC2B,EAAQC,IAAMC,OAAO,CACzBC,QAAQ,GAAD,OAAKP,KACZQ,QAAS,CAAE,eAAgB,mBAAoBC,cAAc,UAAD,OAAYhC,MAuC3D2B,O,4DC7CTnC,E,iDAAAA,EACGC,MAAQ,SAACM,GACd,OAAO4B,IAAMM,KAAN,UAAcC,EAAd,UAA4BnC,IAFjCP,EAKG2C,SAAW,SAACC,EAAerC,GAChC,OAAGqC,EAAuBT,IAAMM,KAAN,UAAcC,EAAd,kBAAoCnC,GAClD4B,IAAMM,KAAN,UAAcC,EAAd,kBAAoCnC,IAP9CP,EAUG6C,SAAW,SAACtC,GACjB,OAAO4B,IAAMM,KAAN,UAAcC,EAAd,aAA+BnC,IAXpCP,EAcG8C,OAAS,SAACvC,GACf,OAAO4B,IAAMM,KAAN,UAAcC,EAAd,WAA6BnC,EAAM,CACxCgC,QAAS,CAAEC,cAAc,UAAD,OAAYjC,EAAKC,WAK/C,IAAIkC,EAAO,YAEI1C","file":"static/js/25.068fd870.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\n\r\nimport './../../../assets/scss/style.scss';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\r\nimport AuthApi from \"../../../utils/auth\";\r\nimport { useAuth } from \"../../../auth-context/auth.context\";\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const history = useHistory();\r\n    const { setUserSession } = useAuth();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [error, setError] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSetShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const isValidEmail = () => {\r\n        return /\\S+@\\S+\\.\\S+/.test(email);\r\n    }\r\n\r\n    const login = (event) => {\r\n\r\n        setError(undefined)\r\n        \r\n        if (event) {\r\n          event.preventDefault();\r\n        }\r\n\r\n        if (email === \"\") {\r\n            return setError(\"Veuillez entrer l'email\");\r\n        }\r\n\r\n        if (!isValidEmail()) {\r\n            return setError('Vérifier votre email si elle est bien valide');\r\n        }\r\n\r\n        if (password === \"\") {\r\n            return setError(\"Veuillez entrer le mot de passe\");\r\n        }\r\n\r\n        setLoading(true);\r\n        AuthApi.Login({\r\n            email,\r\n            password,\r\n        }).then((res)=>{\r\n            console.log(res);\r\n            let user = { ...res.data.user };\r\n            user.token = res.data.token;\r\n            user = JSON.stringify(user);\r\n            setUserSession(user);\r\n            localStorage.setItem(\"user\", user);\r\n            return history.push(\"/apps\");\r\n        }).catch((err)=>{\r\n            if (err.response.data) {\r\n                setError(err.response.data.message);\r\n            } else setError(\"Erreur survenue au serveur \\n Veuillez contacter l'administrateur.\");\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Aux>\r\n            <Breadcrumb/>\r\n            <div className=\"auth-wrapper\">\r\n                <div className=\"auth-content\">\r\n                    <div className=\"auth-bg\">\r\n                        <span className=\"r\"/>\r\n                        <span className=\"r s\"/>\r\n                        <span className=\"r s\"/>\r\n                        <span className=\"r\"/>\r\n                    </div>\r\n                    <form onSubmit={login}>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"mb-4\">\r\n                                    <i className=\"feather icon-unlock auth-icon\"/>\r\n                                </div>\r\n                                <h3 className=\"mb-4\">Authentification</h3>\r\n                                <div className=\"input-group mb-3\">\r\n                                    {/* <span class=\"input-group-append bg-white border-right-0\">\r\n                                        <span class=\"input-group-text\" style={{\"background\":\"#f4f7fa\",\"border-right\":\"0\"}}>\r\n                                            <i class=\"fa fa-user fa-2x\"></i>\r\n                                        </span>\r\n                                    </span> */}\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className=\"form-control\"\r\n                                        name=\"email\" \r\n                                        placeholder=\"Email\"\r\n                                        onChange={(event) => {\r\n                                            setEmail(event.target.value);\r\n                                            setError(undefined);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input \r\n                                        type = {showPassword ? \"text\" : \"password\"}\r\n                                        className=\"form-control\" \r\n                                        name=\"password\"\r\n                                        placeholder=\"password\"\r\n                                        onChange={(event) => {\r\n                                            setPassword(event.target.value);\r\n                                            setError(undefined);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {error && (\r\n                                    <p className=\"text-danger form-text mb-3\">{error}</p>\r\n                                )}\r\n                                <div className=\"form-group-sm text-left mb-4\">\r\n                                    <div className=\"checkbox checkbox-fill d-inline\">\r\n                                        <input type=\"checkbox\" name=\"checkbox-fill-1\" id=\"checkbox-fill-a1\"/>\r\n                                            <label htmlFor=\"checkbox-fill-a1\" className=\"cr\" onClick={handleSetShowPassword}> Voir le mot de passe </label>\r\n                                    </div>\r\n                                </div>\r\n                                {loading ? (\r\n                                    <button className=\"btn btn-primary mb-4\" disabled>\r\n                                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                        {' '} Connexion ...\r\n                                    </button>\r\n                                ) : (\r\n                                    <button type=\"submit\" className=\"btn btn-primary shadow-2 mb-4\">Se connecter</button>\r\n                                )}\r\n\r\n                                <p className=\"mb-2 text-muted\">Mot de passe oublié ? <NavLink to=\"/reset-password\">Réinitialiser</NavLink></p>\r\n                                <p className=\"mb-0 text-muted\">Avez vous déjà une compte ? <NavLink to=\"/sign-up\">S'inscrire</NavLink></p>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","//export const API_SERVER = \"http://localhost:8000/\";\r\nexport const API_SERVER = \"https://api-dgi-portal.herokuapp.com/\";\r\nexport const basename = \"/dgi-portal\";\r\n\r\n","import Axios from \"axios\";\r\nimport { API_SERVER } from \"../config/constant\";\r\n// import swal from \"sweetalert2\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\nconst token = user !== null ? user.token : \"\";\r\nconst axios = Axios.create({\r\n  baseURL: `${API_SERVER}`,\r\n  headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n});\r\n\r\n/*axios.interceptors.request.use(\r\n  (config) => {\r\n    // trigger 'loading=true' event here\r\n    // if (config.url !== `/sanctum/csrf-cookie`) {\r\n    swal.fire({\r\n      title: \"Veuillez patientez\",\r\n      imageUrl: `${API_SERVER}loading2.gif`,\r\n      imageWidth: 50,\r\n      imageHeight: 50,\r\n      imageAlt: \"Attendre\",\r\n      allowOutsideClick: false,\r\n      showConfirmButton: false,\r\n    });\r\n    // }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return Promise.reject(error);\r\n  }\r\n);*/\r\n\r\nexport default axios;\r\n","import axios from \"./index\";\r\n\r\nclass AuthApi {\r\n  static Login = (data) => {\r\n    return axios.post(`${base}/login`, data);\r\n  };\r\n\r\n  static Activate = (isContribuable,data) => {\r\n    if(isContribuable) return axios.post(`${base}/activate/cont`, data);\r\n    else return axios.post(`${base}/activate/pers`, data);\r\n  };\r\n\r\n  static Register = (data) => {\r\n    return axios.post(`${base}/register`, data);\r\n  };\r\n\r\n  static Logout = (data) => {\r\n    return axios.post(`${base}/logout`, data, {\r\n      headers: { Authorization: `Bearer ${data.token}` },\r\n    });\r\n  };\r\n}\r\n\r\nlet base = \"api/users\";\r\n\r\nexport default AuthApi;\r\n"],"sourceRoot":""}