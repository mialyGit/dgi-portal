{"version":3,"sources":["components/Administrateur/Personnel/AddComponents/pers-form.js","components/Administrateur/Personnel/AddComponents/cin-form.js","components/Administrateur/Personnel/AddComponents/compte-form.js","components/Administrateur/Personnel/AddComponents/pro-form.js","components/Administrateur/Personnel/add.js","utils/index.js","components/Common/SweetModal.js","utils/pers.js"],"names":["PersForm","user","handleFileChange","handleInputChange","nextStep","fileRef","useRef","useState","errors","setErrors","file","preview","setPreview","progress","setProgress","color","text","uploadMessage","setUploadMessage","handleChange","e","name","target","handleEvent","setTimeout","value","parseInt","loaded","fileSize","type","result","fileName","Form","onSubmit","preventDefault","formErrors","nom","adresse","newErrors","trim","validateForm","Object","keys","length","Card","Header","Title","as","Body","className","role","id","Row","Col","md","onClick","current","click","Img","onError","src","basename","style","height","variant","alt","FormControl","accept","ref","onChange","event","image","files","fileExtension","split","pop","toLowerCase","indexOf","reader","FileReader","size","addEventListener","addListeners","readAsDataURL","hidden","ProgressBar","animated","now","Group","Label","column","sm","InputGroup","Prepend","Text","placeholder","Feedback","prenom","telephone","Footer","display","justifyContent","href","Button","CinForm","cin","prevStep","hasDuplicata","setDuplicata","next","numero","date_delivrance","date_naissance","lieu_naissance","pere","mere","Check","label","date_duplicata","lieu_duplicata","CompteForm","save","loading","showPassword","setShowPassword","email","password","password_confirmation","test","isValidEmail","Append","disabled","Spinner","animation","aria-hidden","ProForm","path","API_SERVER","service","setService","filterOption","createFilter","ignoreAccents","customStyles","hasError","container","base","flex","control","styles","borderColor","num_matricule","fonction_id","grade_id","type_user_id","service_id","console","log","cacheOptions","loadOptions","input","cb","fetch","then","response","json","data","options","forEach","row","push","nom_sc","defaultOptions","libelle_type","map","nom_gr","newData","filter","el","nom_fn","AddUser","history","useHistory","initialUserState","faker","firstName","lastName","internet","phone","number","photo","address","country","avatar","step","setStep","setLoading","date","past","toJSON","slice","birthdate","min","max","mode","recent","fullName","sex","setCin","setUser","handleInputFileChange","handleCinChange","JSON","stringify","PersApi","add","res","localStorage","removeItem","newValue","pathname","state","catch","err","errorModal","parse","getItem","token","axios","Axios","create","baseURL","headers","Authorization","Toast","Swal","mixin","toast","showConfirmButton","customClass","popup","showClass","hideClass","deleteModal","backdrop","title","icon","buttonsStyling","confirmButton","cancelButton","confirmButtonText","cancelButtonText","showCancelButton","allowOutsideClick","allowEscapeKey","showLoaderOnConfirm","fire","message","html","getAll","get","getAllDemandes","validateStatus","validate","unValidateStatus","post","delete","update","put"],"mappings":"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","file":"static/js/24.d8b1cf16.chunk.js","sourcesContent":["import { basename } from 'config/constant';\r\nimport React, { useRef, useState } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button, ProgressBar } from 'react-bootstrap';\r\n\r\nconst PersForm = ({user, handleFileChange,  handleInputChange, nextStep}) => {\r\n    const fileRef = useRef();\r\n    const [errors, setErrors] = useState({});\r\n    const [preview, setPreview] = useState(user.file);\r\n    const [progress, setProgress] = useState(0)\r\n    const [uploadMessage, setUploadMessage] = useState({\r\n        color : \"text-muted\",\r\n        text : user.file ? user.file : \"Veuillez importer une icône ici\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name } = e.target\r\n        handleInputChange(e)\r\n        if(!!errors[name]){\r\n            setErrors({...errors, [name]:null})\r\n        }\r\n    }\r\n\r\n    const defaultSrcImg = (e) => {\r\n        e.target.src = basename + \"/no-import.png\"\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {nom, adresse} = user;\r\n        const newErrors = {}\r\n        if(!nom || nom.trim() === '') newErrors.nom = \"Veuillez entrer le nom de l'utilisateur\"\r\n        if(!adresse || adresse.trim() === '') newErrors.adresse = \"Veuillez entrer l'adresse de l'utilisateur\"\r\n        return newErrors\r\n    }\r\n\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        if(Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        } else {\r\n            nextStep();\r\n        }\r\n    }\r\n\r\n    function handleEvent(e) {\r\n        setTimeout(() => {\r\n            const value = parseInt( ((e.loaded / e.target.fileSize) * 100), 10 );\r\n            setProgress(value)\r\n            if (e.type === \"loadend\") {\r\n                handleFileChange(e.target.result);\r\n                setUploadMessage({color: \"text-muted\", text: e.target.fileName})\r\n                setPreview(e.target.result);\r\n                setTimeout(() => {\r\n                    setProgress(0)\r\n                }, 100); \r\n            }\r\n        }, 500);\r\n    }\r\n    \r\n    function addListeners(reader) {\r\n        reader.addEventListener('loadstart', handleEvent);\r\n        reader.addEventListener('load', handleEvent);\r\n        reader.addEventListener('loadend', handleEvent);\r\n        reader.addEventListener('progress', handleEvent);\r\n        reader.addEventListener('error', handleEvent);\r\n        reader.addEventListener('abort', handleEvent);\r\n    }\r\n\r\n    const handleInputFileChange = event => {\r\n        const image = event.target.files[0]\r\n        var ext = [\"jpg\",\"jpeg\",\"png\"]\r\n        if(image){\r\n            var fileExtension = image.name.split('.').pop().toLowerCase()\r\n            if(ext.indexOf(fileExtension)>-1){\r\n                const reader = new FileReader();\r\n                reader.fileName = image.name;\r\n                reader.fileSize = image.size;\r\n                addListeners(reader);\r\n                /*reader.onload = ({ target: { result } }) => {\r\n                    setUploadMessage({color: \"text-muted\", text: image.name})\r\n                    setPreview(result)\r\n                    handleFileChange(result)\r\n                };*/\r\n                reader.readAsDataURL(image);\r\n                \r\n            } else{\r\n                setUploadMessage({color: \"text-danger\", text: \"Fichier invalide!\"})\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={next}>\r\n            <Card>\r\n                {/* --------------------------------------------- INFO PERS -----------------------------------------------------------------------*/}\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">Ajouter un utilisateur</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"bs-stepper\">\r\n                        <div className=\"bs-stepper-header\" role=\"tablist\">\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-1\">\r\n                                    <span className=\"bs-stepper-circle\">1</span>\r\n                                    <span className=\"bs-stepper-label\">Information personnelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-2\">\r\n                                    <span className=\"bs-stepper-circle\">2</span>\r\n                                    <span className=\"bs-stepper-label\">Information sur le CIN</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-3\">\r\n                                    <span className=\"bs-stepper-circle\">3</span>\r\n                                    <span className=\"bs-stepper-label\">Information professionelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\"  id=\"step-4\">\r\n                                    <span className=\"bs-stepper-circle\">4</span>\r\n                                    <span className=\"bs-stepper-label\">Information du compte</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <Row  className=\"pt-4\">\r\n                        <Col md={2}>\r\n                            <Card onClick={() => fileRef.current.click()}>\r\n                                <Card.Img onError={defaultSrcImg} style={{ height : '100%' }} variant=\"top\" src={ preview } alt=\"activity-user\" />\r\n                                <small className={`mt-3 text-center ${uploadMessage.color}`} >{uploadMessage.text}</small>\r\n                                <FormControl type=\"file\" id=\"photo\" name=\"photo\" accept=\"image/*\" ref={fileRef} onChange={handleInputFileChange} hidden/>\r\n                            </Card>\r\n                            <ProgressBar className={(progress === 0 ) && \"d-none\"} animated now={progress} />\r\n                        </Col>\r\n                        <Col></Col>\r\n                        <Col md={8} >\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={2}>Nom</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\" id=\"nom\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-user\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.nom && \"is-invalid\"} id=\"nom\" name=\"nom\" placeholder=\"Veuillez entrer votre nom\" value={user.nom} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.nom}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={2}>Prénom</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-user\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl id=\"prenom\" name=\"prenom\" placeholder=\"Veuillez entrer votre prénom\" value={user.prenom} onChange={handleChange} />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={2}>Téléphone</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-phone\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl id=\"telephone\" name=\"telephone\" placeholder=\"Veuillez entrer votre numéro de téléphone\"value={user.telephone} onChange={handleChange} />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={2}>Adresse</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-map-pin\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.adresse && \"is-invalid\"} id=\"adresse\" name=\"adresse\" placeholder=\"Veuillez entrer votre adresse\" value={user.adresse} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.adresse}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{display:'flex', justifyContent:'right'}}>\r\n                        <a href=\"/personnels\" className=\"btn btn-secondary btn-sm\"><i className=\"feather icon-x-circle\"></i>Annuler</a>{' '}\r\n                        <Button className=\"no-margin-btn\" type=\"submit\" variant=\"primary\" size=\"sm\">Confirmer <i className=\"feather icon-chevrons-right\"></i></Button>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PersForm;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst CinForm = ({cin, handleInputChange, nextStep, prevStep}) => {\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [hasDuplicata, setDuplicata] = useState(false);\r\n\r\n    const handleSetDuplicata = () => setDuplicata(!hasDuplicata);\r\n\r\n    const handleChange = (e) => {\r\n        const { name } = e.target\r\n        handleInputChange(e)\r\n        if(!!errors[name]){\r\n            setErrors({...errors, [name]:null})\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {numero, date_delivrance, date_naissance, lieu_naissance } = cin;\r\n        const newErrors = {}\r\n        if(!numero || numero.trim() === '') newErrors.numero = \"Veuillez entrer le numéro cin\"\r\n        if(numero.length !== 12 ) newErrors.numero = \"Le numéro CIN doit comporter 12 caractères\"\r\n        if(!date_delivrance || date_delivrance.trim() === '') newErrors.date_delivrance = \"Veuillez entrer la date de delivrance du cin\"\r\n        if(!date_naissance || date_naissance.trim() === '') newErrors.date_naissance = \"Veuillez entrer la date de naissance\"\r\n        if(!lieu_naissance || lieu_naissance.trim() === '') newErrors.lieu_naissance = \"Veuillez entrer le lieu de naissance\"\r\n        return newErrors\r\n    }\r\n\r\n    const back = (e) => {\r\n        e.preventDefault();\r\n        prevStep();\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        if(Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        } else {\r\n            nextStep();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={next}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">Ajouter un utilisateur</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"bs-stepper\">\r\n                        <div className=\"bs-stepper-header\" role=\"tablist\">\r\n                        <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-1\">\r\n                                    <span className=\"bs-stepper-circle\">1</span>\r\n                                    <span className=\"bs-stepper-label\">Information personnelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-2\">\r\n                                    <span className=\"bs-stepper-circle\">2</span>\r\n                                    <span className=\"bs-stepper-label\">Information sur le CIN</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-3\">\r\n                                    <span className=\"bs-stepper-circle\">3</span>\r\n                                    <span className=\"bs-stepper-label\">Information professionelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\"  id=\"step-4\">\r\n                                    <span className=\"bs-stepper-circle\">4</span>\r\n                                    <span className=\"bs-stepper-label\">Information du compte</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <Row className=\"pt-4\">\r\n                        <Col md={6}>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Numéro CIN</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-hash\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.numero && \"is-invalid\"} id=\"numero\" name=\"numero\" placeholder=\"Numéro CIN\" value={cin.numero} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.numero}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Date de délivrance</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\" >\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-calendar\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type=\"date\" className={errors.date_delivrance && \"is-invalid\"} id=\"date_delivrance\" name=\"date_delivrance\" value={cin.date_delivrance} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.date_delivrance}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} >\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Date de naissance</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-calendar\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type=\"date\" className={errors.date_naissance && \"is-invalid\"} id=\"date_naissance\" name=\"date_naissance\" value={cin.date_naissance} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.date_naissance}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Lieu de naissance</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-map-pin\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.lieu_naissance && \"is-invalid\"} id=\"lieu_naissance\" name=\"lieu_naissance\" placeholder=\"Lieu de naissance\" value={cin.lieu_naissance} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.lieu_naissance}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label column sm={2}>Père</Form.Label>\r\n                        <Col>\r\n                            <InputGroup size=\"sm\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text><i className=\"feather icon-user\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl id=\"pere\" name=\"pere\" placeholder=\"Nom du père\" value={cin.pere} onChange={handleChange} />\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label column sm={2}>Mère</Form.Label>\r\n                        <Col>\r\n                            <InputGroup size=\"sm\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text><i className=\"feather icon-user\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl id=\"mere\" name=\"mere\" placeholder=\"Nom de la mère\" value={cin.mere} onChange={handleChange} />\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <hr />\r\n                    <Form.Group className=\"mt-2\">\r\n                        <Form.Check style={{\"cursor\":\"pointer\"}} type=\"checkbox\" label=\"CIN Duplicata\" onClick={handleSetDuplicata}/>\r\n                    </Form.Group>\r\n                { hasDuplicata && (\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Date de duplicata</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-calendar\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type=\"date\" className={errors.date_duplicata && \"is-invalid\"} id=\"date_duplicata\" name=\"date_duplicata\" value={cin.date_duplicata} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.date_duplicata}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={4}>Lieu de duplicata</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-map-pin\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.lieu_duplicata && \"is-invalid\"} id=\"lieu_duplicata\" name=\"lieu_duplicata\" placeholder=\"Lieu de duplicata\" value={cin.lieu_duplicata} onChange={handleChange}/>\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.lieu_duplicata}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{display:'flex', justifyContent:'right'}}>\r\n                        <Button variant=\"secondary\" size=\"sm\" onClick={back}><i className=\"feather icon-chevrons-left\"></i>Retour</Button>{' '}\r\n                        <Button className=\"no-margin-btn\" type=\"submit\" variant=\"primary\" size=\"sm\" onClick={next}>Confirmer <i className=\"feather icon-chevrons-right\"></i></Button>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CinForm;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button, Spinner } from 'react-bootstrap';\r\n\r\nconst CompteForm = ({user, handleInputChange, prevStep, save , loading}) => {\r\n    \r\n    const [errors, setErrors] = useState({});\r\n    const [showPassword,setShowPassword] = useState(0);\r\n\r\n    const isValidEmail = (email) => {\r\n        return /\\S+@\\S+\\.\\S+/.test(email);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name } = e.target\r\n        handleInputChange(e)\r\n        if(!!errors[name]){\r\n            setErrors({...errors, [name]:null})\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {email, password, password_confirmation} = user;\r\n        const newErrors = {}\r\n        if(!email || email.trim() === '' ) newErrors.email = \"Veuillez entrer l'email\"\r\n        if(!isValidEmail(email)) newErrors.email = \"Veuillez entrer un email valide\"\r\n        if(!password || password.trim() === '') newErrors.password = \"Veuillez entrer le mot de passe\"\r\n        if(!password_confirmation || password_confirmation.trim() === '') newErrors.password_confirmation = \"Veuillez confirmer le mot de passe\"\r\n        if(password.trim() !== password_confirmation.trim()) newErrors.password_confirmation = \"Confirmation de mot de passe incorrect\"\r\n        return newErrors\r\n    }\r\n\r\n    const back = (e) => {\r\n        e.preventDefault();\r\n        prevStep();\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        if(Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        } else {\r\n            save(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={next}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">Ajouter un utilisateur</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"bs-stepper\">\r\n                        <div className=\"bs-stepper-header\" role=\"tablist\">\r\n                        <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-1\">\r\n                                    <span className=\"bs-stepper-circle\">1</span>\r\n                                    <span className=\"bs-stepper-label\">Information personnelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-2\">\r\n                                    <span className=\"bs-stepper-circle\">2</span>\r\n                                    <span className=\"bs-stepper-label\">Information sur le CIN</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-3\">\r\n                                    <span className=\"bs-stepper-circle\">3</span>\r\n                                    <span className=\"bs-stepper-label\">Information professionelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\"  id=\"step-4\">\r\n                                    <span className=\"bs-stepper-circle\">4</span>\r\n                                    <span className=\"bs-stepper-label\">Information du compte</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <Row className=\"pt-4\">\r\n                        <Col>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={3}>Email</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-at-sign\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.email && \"is-invalid\"} id=\"email\" name=\"email\" placeholder=\"Email de confirmation\" value={user.email} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.email}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={3}>Mot de passe</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-lock\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type={showPassword !== 1 ? \"password\" : \"text\"} className={errors.password && \"is-invalid\"} id=\"password\" name=\"password\" placeholder=\"Mot de passe\" value={user.password} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.password}</FormControl.Feedback>\r\n                                        {!errors.password && (<InputGroup.Append>\r\n                                            <InputGroup.Text style={{\"cursor\": \"pointer\"}} onClick={()=> showPassword === 1 ? setShowPassword(0) : setShowPassword(1)}>\r\n                                                <i className={showPassword === 1 ? \"feather icon-eye-off\" : \"feather icon-eye\"}></i>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Append>)}\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label column sm={3} style={{display:'flex', justifyContent:'right'}}>Confirmation</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\" >\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-lock\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl type={showPassword !== 2 ? \"password\" : \"text\"} className={errors.password_confirmation && \"is-invalid\"} id=\"password_confirmation\" name=\"password_confirmation\" placeholder=\"Confirmer votre mot de passe\" value={user.password_confirmation} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.password_confirmation}</FormControl.Feedback>\r\n                                        {!errors.password_confirmation && (<InputGroup.Append>\r\n                                            <InputGroup.Text style={{\"cursor\": \"pointer\"}} onClick={()=> showPassword === 2 ? setShowPassword(0) : setShowPassword(2)}>\r\n                                                <i className={showPassword === 2 ? \"feather icon-eye-off\" : \"feather icon-eye\"}></i>\r\n                                            </InputGroup.Text>\r\n                                        </InputGroup.Append>)}\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{display:'flex', justifyContent:'right'}}>\r\n                        <Button variant=\"secondary\" size=\"sm\" onClick={back}>\r\n                        <i className=\"feather icon-chevrons-left\"></i>Retour\r\n                        </Button>{' '}\r\n                        {(loading && (\r\n                            <Button variant=\"primary\" size=\"sm\" disabled>\r\n                                <Spinner as=\"span\" className=\"mr-2\" size=\"sm\" animation=\"border\" role=\"status\" aria-hidden=\"true\" />\r\n                                Veuillez patientez ...\r\n                            </Button>\r\n                        )) || (\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={next}>\r\n                                <i className=\"feather icon-check-square\"></i>Sauvegarder\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CompteForm;\r\n","import React, { useState } from 'react';\r\nimport { createFilter } from 'react-select';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { API_SERVER } from \"config/constant\";\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst ProForm = ({user, handleInputChange, nextStep, prevStep}) => {\r\n\r\n    const path = API_SERVER + 'api/';\r\n    const [errors, setErrors] = useState({});\r\n    const [service, setService] = useState(0);\r\n    // let fonctions = JSON.parse(localStorage.getItem('fonctions') || '[]')\r\n    // let services = JSON.parse(localStorage.getItem('services') || '[]')\r\n\r\n    const loadType = (input,cb) => {\r\n        let json =  [\r\n            {id:0, libelle_type:'Utilisateur'},\r\n            {id:1, libelle_type:'Administrateur'},\r\n        ]\r\n        cb(json.map( row => ({\r\n            label: row.libelle_type, \r\n            value: row.id, \r\n            target : { name: 'type_user_id', value : row.id }\r\n        })))\r\n    }\r\n\r\n    const loadGrade = (input,cb) => {\r\n        fetch(`${path}grades`).then((response) => response.json())\r\n        .then((data) => {\r\n          const options = []\r\n          data.forEach((row) => {\r\n            options.push({label: `${row.nom_gr}`, value: row.id, target : { name: 'grade_id', value : row.id }})\r\n          })\r\n          cb(options);\r\n        })\r\n    }\r\n\r\n    const loadService = (input,cb) => {\r\n        fetch(`${path}services`).then((response) => response.json())\r\n        .then((data) => {\r\n          const options = []\r\n          data.forEach((row) => {\r\n            options.push({label: `${row.nom_sc}`, value: parseInt(row.id)})\r\n          })\r\n          cb(options);\r\n        })\r\n    }\r\n\r\n    const loadFonction = (input,cb) => {\r\n        fetch(`${path}fonctions`).then((response) => response.json())\r\n        .then((data) => {\r\n          const options = []\r\n          const newData = data.filter((el) => el.service_id === service)\r\n          console.log(newData);\r\n          newData.forEach((row) => {\r\n            options.push({label: `${row.nom_fn}`, value: row.id, target : { name: 'fonction_id', value : row.id }})\r\n          })\r\n          cb(options);\r\n        })\r\n    }\r\n\r\n    const filterOption = createFilter({ ignoreAccents: true })\r\n\r\n    const customStyles  = (hasError) => ({\r\n        container: base => ({\r\n            ...base,\r\n            flex: 1\r\n        }),\r\n        control: (styles) => ({\r\n            ...styles,\r\n            ...(errors[hasError] && { borderColor: 'red' }),\r\n          }),\r\n    })\r\n\r\n    const handleService = (data) => {\r\n        setService(data.value)\r\n        errors.service_id && setErrors({...errors, service_id:null})\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name } = e.target\r\n        handleInputChange(e)\r\n        if(!!errors[name]){\r\n            setErrors({...errors, [name]:null})\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {num_matricule, fonction_id, grade_id, type_user_id } = user;\r\n        const service_id = service\r\n        const newErrors = {}\r\n        if(!num_matricule || num_matricule.trim() === '') newErrors.num_matricule = \"Veuillez entrer le numéro matricule\"\r\n        if(!service_id || service_id === 0) newErrors.service_id = \"Veuillez entrer le service du personnel\"\r\n        if(!fonction_id || fonction_id === 0) newErrors.fonction_id = \"Veuillez entrer la fonction du personnel\"\r\n        if(!grade_id || grade_id === 0) newErrors.grade_id = \"Veuillez entrer le grade du personnel\"\r\n        if(type_user_id === -1) newErrors.type_user_id = \"Veuillez entrer le type de l'utilisateur\"\r\n        return newErrors\r\n    }\r\n\r\n    const back = (e) => {\r\n        e.preventDefault();\r\n        prevStep();\r\n    }\r\n\r\n    const next = (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        console.log(formErrors);\r\n        if(Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        } else {\r\n            nextStep();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={next}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Card.Title as=\"h5\">Ajouter un utilisateur</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"bs-stepper\">\r\n                        <div className=\"bs-stepper-header\" role=\"tablist\">\r\n                        <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-1\">\r\n                                    <span className=\"bs-stepper-circle\">1</span>\r\n                                    <span className=\"bs-stepper-label\">Information personnelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-2\">\r\n                                    <span className=\"bs-stepper-circle\">2</span>\r\n                                    <span className=\"bs-stepper-label\">Information sur le CIN</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step active\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\" id=\"step-3\">\r\n                                    <span className=\"bs-stepper-circle\">3</span>\r\n                                    <span className=\"bs-stepper-label\">Information professionelle</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"line\"></div>\r\n                            <div className=\"step\">\r\n                                <button type=\"button\" className=\"step-trigger\" role=\"tab\"  id=\"step-4\">\r\n                                    <span className=\"bs-stepper-circle\">4</span>\r\n                                    <span className=\"bs-stepper-label\">Information du compte</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <Row className=\"pt-4\">\r\n                        <Col md={6}>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={4}>Numéro Matricule</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-hash\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend>\r\n                                        <FormControl className={errors.num_matricule && \"is-invalid\"} id=\"num_matricule\" name=\"num_matricule\" placeholder=\"Numéro Matricule\" value={user.num_matricule} onChange={handleChange} />\r\n                                        <FormControl.Feedback type=\"invalid\" className=\"text-right\">{errors.num_matricule}</FormControl.Feedback>\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={4}>Direction ou Service</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        {/* <InputGroup.Prepend>\r\n                                            <InputGroup.Text><i className=\"feather icon-hash\"></i></InputGroup.Text>\r\n                                        </InputGroup.Prepend> */}\r\n                                        <AsyncSelect cacheOptions filterOption={filterOption} loadOptions={loadService} defaultOptions placeholder=\"Selectionner la direction ou service\"  styles={ customStyles('service_id') } onChange={handleService} />\r\n                                    </InputGroup>\r\n                                    <small className=\"text-danger text-right\">{errors.service_id}</small>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={4}>Type de l'utilisateur</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <AsyncSelect cacheOptions filterOption={filterOption} loadOptions={loadType} defaultOptions placeholder=\"Selectionner le type\" name=\"type_user_id\" styles={ customStyles('type_user_id') } onChange={handleChange} />\r\n                                    </InputGroup>\r\n                                    <small className=\"text-danger text-right\">{errors.type_user_id}</small>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6} >\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={3}>Grade</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\">\r\n                                        <AsyncSelect cacheOptions filterOption={filterOption} loadOptions={loadGrade} defaultOptions placeholder=\"Selectionner le grade\" name=\"grade_id\" styles={ customStyles('grade_id') } onChange={handleChange} />\r\n                                    </InputGroup>\r\n                                    <small className=\"text-danger text-right\">{errors.grade_id}</small>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3\">\r\n                                <Form.Label className=\"text-right\" column sm={3}>Fonction</Form.Label>\r\n                                <Col>\r\n                                    <InputGroup size=\"sm\" >\r\n                                        <AsyncSelect cacheOptions filterOption={filterOption} loadOptions={loadFonction} placeholder=\"Selectionner la fonction\" name=\"fonction_id\" styles={ customStyles('fonction_id') } onChange={handleChange} />\r\n                                    </InputGroup>\r\n                                    <small className=\"text-danger text-right\">{errors.fonction_id}</small>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div style={{display:'flex', justifyContent:'right'}}>\r\n                        <Button variant=\"secondary\" size=\"sm\" onClick={back}><i className=\"feather icon-chevrons-left\"></i>Retour</Button>{' '}\r\n                        <Button className=\"no-margin-btn\" type=\"submit\" variant=\"primary\" size=\"sm\" onClick={next}>Confirmer <i className=\"feather icon-chevrons-right\"></i></Button>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default ProForm;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { faker } from '@faker-js/faker/locale/fr';\r\nimport PersForm from './AddComponents/pers-form';\r\nimport CinForm from './AddComponents/cin-form';\r\nimport CompteForm from './AddComponents/compte-form';\r\nimport ProForm from './AddComponents/pro-form';\r\nimport { errorModal } from \"../../Common/SweetModal\"\r\n\r\nimport Aux from \"hoc/_Aux\";\r\nimport PersApi from 'utils/pers';\r\n\r\nconst AddUser = () => {\r\n    const history = useHistory();\r\n    // const today = new Date().toJSON().slice(0,10)\r\n    const initialUserState = {\r\n        id : \"\",\r\n        nom : faker.name.firstName(),\r\n        prenom : faker.name.lastName(),\r\n        email : faker.internet.email(),\r\n        telephone : faker.phone.number('+261 34 ## ### ##'),\r\n        photo : \"\",\r\n        adresse : faker.address.country(),\r\n        password : '',\r\n        password_confirmation : '',\r\n        file: faker.image.avatar(),\r\n        num_matricule : faker.phone.number('######'),\r\n        fonction_id : 0,\r\n        grade_id : 0,\r\n        type_user_id : -1\r\n    }\r\n    const [step, setStep] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const nextStep = () => {\r\n        setStep(step+1)\r\n    }\r\n\r\n    const prevStep = () => {\r\n        setStep(step-1)\r\n    }\r\n    \r\n    const [cin, setCin] = useState({\r\n        numero : faker.phone.number('201#########'),\r\n        date_delivrance : faker.date.past(18).toJSON().slice(0,10),\r\n        date_naissance : faker.date.birthdate({ min: 18, max: 65, mode: 'age' }).toJSON().slice(0,10),\r\n        lieu_naissance : faker.address.country(),\r\n        date_duplicata : faker.date.recent().toJSON().slice(0,10),\r\n        lieu_duplicata : faker.address.country(),\r\n        pere : faker.name.fullName({sex: 'male'}),\r\n        mere : faker.name.fullName({sex: 'female'})\r\n    });\r\n\r\n    const [user, setUser] = useState(initialUserState);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({ ...user, [name]: value });\r\n    };\r\n\r\n    const handleInputFileChange = (image) => {\r\n        setUser({ ...user, file: image })\r\n    }\r\n\r\n    const handleCinChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCin({ ...cin, [name]: value });\r\n    };\r\n\r\n    const save = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        // let str_cin = new Blob([JSON.stringify({})], { type: 'application/json'})\r\n        let data = {...user}\r\n        data.cin = JSON.stringify(cin)\r\n        PersApi.add(data).then((res)=>{\r\n            console.log(res);\r\n            localStorage.removeItem(\"personnels\")\r\n            let newValue = res.data.user\r\n            return history.push({pathname: '/personnels', state : {newValue}});\r\n        }).catch((err)=>{\r\n            errorModal(err)\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n    // const addComponents = () => {\r\n    //     switch (step) {\r\n    //         case 1: return <PersForm user={user} handleInputChange={handleInputChange} nextStep={nextStep} prevStep={prevStep}/>\r\n    //         case 2: return <CinForm cin={cin} handleInputChange={handleCinChange} nextStep={nextStep} prevStep={prevStep}/>\r\n    //         case 3: return <CompteForm user={user} handleInputChange={handleInputChange} nextStep={nextStep} prevStep={prevStep}/>\r\n    //         default: return <PersForm user={user} handleInputChange={handleInputChange} nextStep={nextStep} prevStep={prevStep}/>\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                {(() => {\r\n                    switch (step) {\r\n                        case 1: return <PersForm user={user} handleFileChange={handleInputFileChange} handleInputChange={handleInputChange} nextStep={nextStep} />\r\n                        case 2: return <CinForm cin={cin} handleInputChange={handleCinChange} nextStep={nextStep} prevStep={prevStep} />\r\n                        case 3: return <ProForm user={user} handleInputChange={handleInputChange} nextStep={nextStep} prevStep={prevStep} />\r\n                        case 4: return <CompteForm user={user} handleInputChange={handleInputChange} save={save} prevStep={prevStep} loading={loading} />\r\n                        default: return <PersForm user={user} handleFileChange={handleInputFileChange} handleInputChange={handleInputChange} nextStep={nextStep} />\r\n                    }\r\n                })()}\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default AddUser;\r\n","import Axios from \"axios\";\r\nimport { API_SERVER } from \"../config/constant\";\r\n// import swal from \"sweetalert2\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\nconst token = user !== null ? user.token : \"\";\r\nconst axios = Axios.create({\r\n  baseURL: `${API_SERVER}`,\r\n  headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n});\r\n\r\n/*axios.interceptors.request.use(\r\n  (config) => {\r\n    // trigger 'loading=true' event here\r\n    // if (config.url !== `/sanctum/csrf-cookie`) {\r\n    swal.fire({\r\n      title: \"Veuillez patientez\",\r\n      imageUrl: `${API_SERVER}loading2.gif`,\r\n      imageWidth: 50,\r\n      imageHeight: 50,\r\n      imageAlt: \"Attendre\",\r\n      allowOutsideClick: false,\r\n      showConfirmButton: false,\r\n    });\r\n    // }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return Promise.reject(error);\r\n  }\r\n);*/\r\n\r\nexport default axios;\r\n","import Swal from 'sweetalert2';\r\nimport 'animate.css';\r\n\r\nconst Toast = () => {\r\n    return Swal.mixin({\r\n        toast: true,\r\n        showConfirmButton: false,\r\n        customClass : { container: 'ml-popup', popup : 'hover-popup'},\r\n        showClass: {\r\n            popup: 'animate__animated animate__fadeInDown'\r\n        },\r\n        hideClass: {\r\n            popup: 'animate__animated animate__fadeOutDown'\r\n        }\r\n    })\r\n}\r\n\r\nconst deleteModal = () => {\r\n    return Swal.mixin({\r\n        // toast: true,\r\n        backdrop : true,\r\n        title : 'Attention',\r\n        text: 'Voulez vous vraiment supprimer ?',\r\n        icon: 'warning',\r\n        buttonsStyling: false,\r\n        customClass : { \r\n            popup : 'swal-sm', \r\n            confirmButton : 'btn btn-danger btn-sm',\r\n            cancelButton : 'btn btn-secondary btn-sm'\r\n        },\r\n        confirmButtonText : 'Confirmer', \r\n        cancelButtonText : 'Annuler', \r\n        showCancelButton: true,\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        showLoaderOnConfirm: true,\r\n    })\r\n}\r\n\r\nconst errorModal = (err) => {\r\n    if (err.response.data) {\r\n        Toast().fire({title: err.response.data.message, icon:'error'})\r\n    } else Toast().fire({\r\n        title: \"Erreur survenue au serveur\",\r\n        html : `Veuillez contacter l'administrateur`,\r\n        icon:'error'\r\n    })\r\n}\r\n\r\n/*const errorModal = (err) => {\r\n    const modal = Swal.mixin({\r\n        icon: 'error',\r\n        buttonsStyling: false,\r\n        customClass : { popup : 'swal-sm', confirmButton : 'btn btn-danger' }\r\n    });\r\n    if (err.response.data) {\r\n        modal.fire({html: err.response.data.message})\r\n    } else modal.fire({html: \"Erreur survenue au serveur <br/> Veuillez contacter l'administrateur.\"})\r\n}*/\r\n\r\nexport { deleteModal, errorModal ,Toast } \r\n","import axios from \"./index\";\r\n\r\nclass PersApi {\r\n  static getAll = () => {\r\n    return axios.get(`${base}`);\r\n  };\r\n\r\n  static getAllDemandes = () => {\r\n    return axios.get(`api/users/demandes`);\r\n  };\r\n\r\n  static validateStatus = (validate, id) => {\r\n    if(validate) return axios.get(`api/users/validate/${id}`);\r\n    else return axios.get(`api/users/unvalidate/${id}`);\r\n  };\r\n\r\n  static unValidateStatus = (id) => {\r\n    return axios.get(`api/users/unvalidate/${id}`);\r\n  };\r\n\r\n  static add = (data) => {\r\n    return axios.post(`${base}`, data);\r\n  };\r\n\r\n  static delete = (id) => {\r\n    return axios.delete(`${base}/${id}`);\r\n  };\r\n\r\n  static update = (data,id) => {\r\n    return axios.put(`${base}/${id}`, data);\r\n    // return axios.put(`${base}/${id}`, data);\r\n  };\r\n}\r\n\r\n// let base = \"api/users\";\r\nlet base = \"api/personnels\";\r\n\r\nexport default PersApi;\r\n"],"sourceRoot":""}