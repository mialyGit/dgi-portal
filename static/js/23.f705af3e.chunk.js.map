{"version":3,"sources":["components/Administrateur/Application/index.js","utils/index.js","components/Common/SweetModal.js","utils/app.js"],"names":["Application","history","useHistory","location","useLocation","path","API_SERVER","useState","rows","setRows","loading","setLoading","defaultSrcImg","e","target","src","basename","useEffect","state","newValue","Toast","fire","console","log","replace","data","JSON","parse","localStorage","getItem","AppApi","getAll","then","res","setItem","stringify","catch","err","removeItem","errorModal","finally","Header","Title","as","className","to","variant","size","Body","animation","role","length","map","item","md","xl","key","id","href","lien_app","rel","onError","logo_app","alt","width","nom_app","code_app","onClick","push","pathname","edit","style","user","token","axios","Axios","create","baseURL","headers","Authorization","Swal","mixin","toast","showConfirmButton","customClass","container","popup","showClass","hideClass","deleteModal","backdrop","title","text","icon","buttonsStyling","confirmButton","cancelButton","confirmButtonText","cancelButtonText","showCancelButton","allowOutsideClick","allowEscapeKey","showLoaderOnConfirm","response","message","html","get","base","delete","update","post","add"],"mappings":"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","file":"static/js/23.f705af3e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Row, Col, Card, Spinner, Button} from 'react-bootstrap';\r\nimport { useLocation, useHistory, Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport Aux from \"hoc/_Aux\";\r\nimport { API_SERVER, basename } from \"config/constant\";\r\nimport { errorModal, Toast } from \"../../Common/SweetModal\"\r\nimport AppApi from 'utils/app';\r\n\r\nconst Application = () =>  {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const path = API_SERVER + 'storage/';\r\n    \r\n    const [rows, setRows] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const defaultSrcImg = (e) => {\r\n        e.target.src = basename + \"/default-logo.png\"\r\n    }\r\n\r\n    const getAll = () => {\r\n        if(location.state && location.state.newValue){\r\n            Toast().fire('Application ajouté avec succès','','success');\r\n            console.log(location.state.newValue);\r\n            history.replace()\r\n        }\r\n        const data = JSON.parse(localStorage.getItem(\"apps\"))\r\n        if(data){\r\n            setLoading(false);\r\n            return setRows(data)\r\n        }\r\n        AppApi.getAll().then((res)=> {\r\n            const { data } = res;\r\n            setRows(data);\r\n            localStorage.setItem(\"apps\", JSON.stringify(data))\r\n        }).catch((err)=>{\r\n            localStorage.removeItem(\"apps\")\r\n            errorModal(err)\r\n        })\r\n        .finally(() => {\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const edit = (item) => {\r\n        history.push({pathname: '/apps/edit', state: {item}})\r\n        console.log(item);\r\n    }\r\n\r\n    useEffect(() => {\r\n      getAll()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    {/* --------------------------------------------- APPLICATION PAR DEFAUT -----------------------------------------------------------------------*/}\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\"> Applications par défaut </Card.Title>\r\n                            <div className=\"card-header-right\">\r\n                                <Link to=\"/apps/new\">\r\n                                    <Button variant=\"secondary\" size=\"sm\" ><i className=\"feather icon-file-plus\"></i>AJOUTER</Button>\r\n                                </Link>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                {loading ? (\r\n                                    <Col className=\"mt-4 text-center\">\r\n                                        <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                                    </Col>\r\n                                ) :\r\n                                rows.length > 0 ?\r\n                                    rows.map((item) => (\r\n                                        <Col md={6} xl={4} key={item.id}>\r\n                                            <Card className='card-social app-link'>\r\n                                                <Card.Body className='border-bottom'>\r\n                                                <a href={item.lien_app} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                    <div className=\"row align-items-center justify-content-center\">\r\n                                                        <div className=\"col-auto\">\r\n                                                            <LazyLoadImage onError={defaultSrcImg} src={ path + item.logo_app } alt=\"\" width={50}/>\r\n                                                        </div>\r\n                                                        <div className=\"col text-right\">\r\n                                                            <h4>{ item.nom_app }</h4>\r\n                                                            <h6 className=\"text-c-green mb-0\"><span className=\"text-muted\">Code : { item.code_app }</span></h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </a>\r\n                                                </Card.Body>\r\n                                                <Card.Body>\r\n                                                    <div className=\"row align-items-center justify-content-center card-active\">\r\n                                                        <div className=\"col-6\"><span onClick={()=>edit(item)} className=\"label bg-dark text-white f-12\" style={{\"cursor\":\"pointer\"}}>Modifier</span></div>\r\n                                                        <div className=\"col-6 text-right\"><a href={item.lien_app} target=\"_blank\" rel=\"noopener noreferrer\" className=\"label theme-bg text-white f-12 r-0\">Aller au site</a></div>\r\n                                                    </div>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    )): (\r\n                                        <Col className=\"mt-4 text-center\"> Aucune résultat </Col>   \r\n                                    )}\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default Application;","import Axios from \"axios\";\r\nimport { API_SERVER } from \"../config/constant\";\r\n// import swal from \"sweetalert2\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\nconst token = user !== null ? user.token : \"\";\r\nconst axios = Axios.create({\r\n  baseURL: `${API_SERVER}`,\r\n  headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n});\r\n\r\n/*axios.interceptors.request.use(\r\n  (config) => {\r\n    // trigger 'loading=true' event here\r\n    // if (config.url !== `/sanctum/csrf-cookie`) {\r\n    swal.fire({\r\n      title: \"Veuillez patientez\",\r\n      imageUrl: `${API_SERVER}loading2.gif`,\r\n      imageWidth: 50,\r\n      imageHeight: 50,\r\n      imageAlt: \"Attendre\",\r\n      allowOutsideClick: false,\r\n      showConfirmButton: false,\r\n    });\r\n    // }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // trigger 'loading=false' event here\r\n    swal.close();\r\n    return Promise.reject(error);\r\n  }\r\n);*/\r\n\r\nexport default axios;\r\n","import Swal from 'sweetalert2';\r\nimport 'animate.css';\r\n\r\nconst Toast = () => {\r\n    return Swal.mixin({\r\n        toast: true,\r\n        showConfirmButton: false,\r\n        customClass : { container: 'ml-popup', popup : 'hover-popup'},\r\n        showClass: {\r\n            popup: 'animate__animated animate__fadeInDown'\r\n        },\r\n        hideClass: {\r\n            popup: 'animate__animated animate__fadeOutDown'\r\n        }\r\n    })\r\n}\r\n\r\nconst deleteModal = () => {\r\n    return Swal.mixin({\r\n        // toast: true,\r\n        backdrop : true,\r\n        title : 'Attention',\r\n        text: 'Voulez vous vraiment supprimer ?',\r\n        icon: 'warning',\r\n        buttonsStyling: false,\r\n        customClass : { \r\n            popup : 'swal-sm', \r\n            confirmButton : 'btn btn-danger btn-sm',\r\n            cancelButton : 'btn btn-secondary btn-sm'\r\n        },\r\n        confirmButtonText : 'Confirmer', \r\n        cancelButtonText : 'Annuler', \r\n        showCancelButton: true,\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        showLoaderOnConfirm: true,\r\n    })\r\n}\r\n\r\nconst errorModal = (err) => {\r\n    if (err.response.data) {\r\n        Toast().fire({title: err.response.data.message, icon:'error'})\r\n    } else Toast().fire({\r\n        title: \"Erreur survenue au serveur\",\r\n        html : `Veuillez contacter l'administrateur`,\r\n        icon:'error'\r\n    })\r\n}\r\n\r\n/*const errorModal = (err) => {\r\n    const modal = Swal.mixin({\r\n        icon: 'error',\r\n        buttonsStyling: false,\r\n        customClass : { popup : 'swal-sm', confirmButton : 'btn btn-danger' }\r\n    });\r\n    if (err.response.data) {\r\n        modal.fire({html: err.response.data.message})\r\n    } else modal.fire({html: \"Erreur survenue au serveur <br/> Veuillez contacter l'administrateur.\"})\r\n}*/\r\n\r\nexport { deleteModal, errorModal ,Toast } \r\n","import axios from \"./index\";\r\n\r\nclass AppApi {\r\n  static getAll = () => {\r\n    return axios.get(`${base}`);\r\n  };\r\n\r\n  static delete = (id) => {\r\n    return axios.delete(`${base}/${id}`);\r\n  };\r\n\r\n  static update = (id, data) => {\r\n    return axios.post(`${base}/${id}?_method=PUT`, data);\r\n  };\r\n\r\n  static add = (data) => {\r\n    return axios.post(`${base}`, data);\r\n  };\r\n}\r\n\r\nlet base = \"api/applications\";\r\n\r\nexport default AppApi;\r\n"],"sourceRoot":""}